{"version":3,"file":"static/webpack/static/development/pages/_app.js.dcd81c61cc00927d7e72.hot-update.js","sources":["webpack:///./components/Search.js","webpack:///./lib/withData.js"],"sourcesContent":["import React from 'react';\nimport Downshift from 'downshift';\nimport Router from 'react-apollo';\nimport { ApolloConsumer } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\n\nconst SEARCH_ITEMS_QUERY = gql `\n  query SEARCH_ITEMS_QUERY($searchTerm: String!) {\n    items(where: {\n      OR: [\n        {title_contains: $searchTerm},\n        {description_contains: $searchTerm}\n      ]\n    }) {\n      id\n      image\n      title\n    }\n  }\n`;\n\nclass AutoComplete extends React.Component {\n  state = {\n    items: [],\n    loading: false,\n  }\n  onChange = debounce(async (e, client) => {\n    // turn loading on\n    this.setState({ loading: true });\n    // Manually query apollo client\n    const res = await client.query({\n      query: SEARCH_ITEMS_QUERY,\n      variables: { searchTerm: e.target.value },\n    });\n    this.setState({\n      items: res.data.items,\n      loading: false,\n    })\n  }, 350);\n  render() {\n    return (\n      <SearchStyles>\n        <Downshift>\n          {({ getInputProps, getItemProps, isOpen, inputValue, highlightedIndex }) => (\n          <div>\n            <ApolloConsumer>\n              {client => (\n                  <input\n                  {...getInputProps({\n                    type: \"search\",\n                    placeholder: \"search for an item\",\n                    className: this.state.loading ? 'loading' : '',\n                    onChange: e => {\n                      e.persist();\n                      this.onChange(e, client);\n                  },\n                })}\n                />\n              )}\n            </ApolloConsumer>\n            <DropDown>\n              {this.state.items.map(item => (\n                <DropDownItem key={item.id}>\n                  <img width='50' src={item.image} alt={item.title}/>\n                  {item.title}\n                </DropDownItem>))}\n            </DropDown>\n          </div>\n        )}\n        </Downshift>\n      </SearchStyles>\n    )\n  }\n}\n\nexport default AutoComplete;","import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint } from '../config';\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include',\n        },\n        headers,\n      });\n    },\n    // Local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCart(_, variables, { cache }) {\n            // read the cart open value from the cache\n            const { cartOpen } = cache.readQuery({\n              query: LOCAL_STATE_QUERY,\n            });\n            // Write the cart state to the opposite\n            const data = {\n              data: { cartOpen: !cartOpen },\n            };\n            cache.writeData(data);\n            return data;\n          },\n        },\n      },\n      defaults: {\n        cartOpen: false,\n      },\n    },\n  });\n}\n\nexport default withApollo(createClient);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAcA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAKA;AACA;AAAA;AAAA;AAFA;AACA;AALA;AAIA;AACA;AAGA;AACA;AACA;AAFA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAlBA;AA6BA;;;;AAnDA;AACA;AAqDA;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAGA;AADA;AAFA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAZA;AADA;AAgBA;AACA;AADA;AAjBA;AAXA;AAiCA;AACA;AACA;;;;A","sourceRoot":""}