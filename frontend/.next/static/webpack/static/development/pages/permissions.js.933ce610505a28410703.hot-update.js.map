{"version":3,"file":"static/webpack/static/development/pages/permissions.js.933ce610505a28410703.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query, Mutation } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\n\nconst possiblePermissions = [\n  'ADMIN',\n  'USER',\n  'ITEMCREATE',\n  'ITEMUPDATE',\n  'ITEMDELETE',\n  'PERMISSIONUPDATE',\n];\n\nconst ALL_USERS_QUERY = gql`\n  query {\n    users {\n      id\n      name\n      email\n      permissions\n    }\n  }\n`;\n\nconst UPDATE_PERMISSIONS_MUTATION = gql`\n  mutation updatePermissions($permissions: [Permission],\n    $userId: ID!) {\n      updatedPermisssions(permissions: $permissions, userId: $userId) {\n        id\n        permissions\n        name\n        email\n      }\n    }\n`;\n\nconst Permissions = props => (\n  <Query query={ALL_USERS_QUERY}>\n    {({ data, loading, error }) =>\n    console.log(data) || (\n      <div>\n        <Error error={error}/>\n        <div>\n          <h2>Manage Permissions</h2>\n          <Table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                {possiblePermissions.map(permission =>\n                  <th key={permission}>{permission}</th> )}\n                  <th>â†“</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.users.map(user => <UserPermissions user={user} key={user.id}/>)}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    )}\n  </Query>\n);\n\nclass UserPermissions extends React.Component {\n\n  static propTypes = {\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      email: PropTypes.string,\n      id: PropTypes.string,\n      permissions: PropTypes.array,\n    }).isRequired,\n  }\n  state = {\n    permissions: this.props.user.permissions,\n  }\n  handlePermissionChange = e => {\n    const checkbox = e.target;\n    // take a copy of the current permissions\n    let updatedPermissions = [...this.state.permissions];\n    // figure out if we need to remove or add this permission\n    if(checkbox.checked) {\n      // add it in\n      updatedPermissions.push(checkbox.value);\n    } else {\n      updatedPermissions = updatedPermissions.filter\n      (permission => permission !== checkbox.value);\n    }\n    this.setState({ permissions: updatedPermissions });\n  }\n  render() {\n    const user  = this.props.user;\n    return (\n      <Mutation mutation={UPDATE_PERMISSIONS_MUTATION}\n        variables={{ \n          permissions: this.state.permissions,\n          userId: this.props.user.id\n        }}\n      >\n        {(updatePermissions, { loading, error })=> (\n          <>\n          {error && <tr><td colspan=\"8\"><Error error={error }/></td></tr>}\n            <tr>\n              <td>{user.name}</td>\n              <td>{user.email}</td>\n              {possiblePermissions.map(permission => (\n              <td key={permission}>\n                <label htmlFor={`${user.id}-permission-${permission}`}>\n                  <input // when input id has a matching id as the label then you can click anywhere in the box for a check\n                    id={`${user.id}-permission-${permission}`}\n                    type=\"checkbox\" checked= \n                    {this.state.permissions.includes(permission)}\n                    value={permission}\n                    onChange={this.handlePermissionChange}\n                    />\n                </label>\n              </td>\n            ))}\n            <td>\n              <SickButton\n                type=\"button\"\n                disabled={loading}\n                onClick={updatePermissions}\n              >UPDATE</SickButton>\n            </td>\n          </tr>\n          </>\n          )}\n      </Mutation>\n    )\n  }\n}\n\nexport default Permissions;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AAWA;AACA;AAWA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAFA;AACA;AA2BA;;;;;;;;;;;;;;;;;;AAUA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AA+BA;;;;AAnEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAmEA;;;;A","sourceRoot":""}