{"version":3,"file":"static/webpack/static/development/pages/items.js.7f340f3dcb6b4511f581.hot-update.js","sources":["webpack:///./components/DeleteItem.js"],"sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { ALL_ITEMS_QUERY } from './Items';\n\nconst DELETE_ITEM_MUTATION = gql `\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n    }\n  }\n`; \n\nclass DeleteItem extends Component {\n  update = (cache, payload) => {\n    // manually update the cache on the client, so it matches the server \n    // 1. Read the cache for the items we want \n    const data = cache.readQuery({ query: ALL_ITEMS_QUERY });\n    console.log(data)\n  } \n  render() {\n    return (\n      <Mutation \n        mutation={DELETE_ITEM_MUTATION} \n        variables={{id: this.props.id}}>\n          {(deleteItem, { error }) => (\n            <button onClick={() => {\n              if(confirm('Are you sure you want to delete this Item?')){\n                deleteItem();\n              }\n            }}\n            >\n          {this.props.children}\n          </button>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default DeleteItem;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;;;;AAxBA;AACA;AA0BA;;;;A","sourceRoot":""}